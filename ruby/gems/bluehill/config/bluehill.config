
# This is an example configuration file for the Bluehill code generator for Cairngorm-based
# Flex and AIR projects.  Your configuration file will probably be much larger as you add
# events, services, models, etc. to your application.  See the README file for usage 
# instructions.

* Bluehill will use these global configuration values:
  - Workspace directory is:              /fb302
  - Verbose output is:                   true
  - Overwrite files is:                  true
  - Create backup files is:              false

  # You can create your own Ruby ERB templates for the various Flex classes and interfaces.
  # The configuration entries below use the default bluehill templates which are appropriate
  # for most applications.
  - Events class template is:            templates/bluehill_events.erb
  - Event class template is:             templates/bluehill_event.erb
  - Cairngorm Event class template is:   templates/bluehill_cairngorm_event.erb
  - FrontController class template is:   templates/bluehill_controller.erb
  - Command superclass template is:      templates/bluehill_command_superclass.erb
  - Command subclass template is:        templates/bluehill_command.erb
  - Delegate superclass template is:     templates/bluehill_delegate_superclass.erb
  - Delegate subclass template is:       templates/bluehill_delegate.erb
  - Services.mxml template is:           templates/bluehill_services_mxml.erb
  - Service result utility:              templates/bluehill_service_result_utility.erb
  - ModelLocator interface template is:  templates/bluehill_model_locator.erb
  - Model interface template is:         templates/bluehill_model.erb
  - ValueObject superclass template is:  templates/bluehill_vo_superclass.erb
  - ValueObject class template is:       templates/bluehill_vo.erb
  - View mxml template is:               templates/bluehill_view.erb

* Bluehill will be used for these projects in your workspace:
  - Project: YourApplication

* Project YourApplication will use these configuration values:
  - Base ActionScript package:               com.yourdomain.yourapp
  - HTTPService default base url is:         http://www.yourdomain.com/yourapp

  # You can define the HTTPServices that your application uses with lines like this:
  # HTTPService  name                       method     path              format

  - HTTPService: get_amq_info                GET  /amq_info.xml           e4x
  - HTTPService: get_app_monitor_date        GET  /app_monitor_date.txt   text
  - HTTPService: get_configuration           GET  /configuration.xml      e4x
  - HTTPService: get_monitor_results         GET  /monitor_results.xml    e4x
  - HTTPService: get_crontab_info            GET  /crontab.txt            text
  - HTTPService: get_process_info            GET  /process_info.txt       text

  - Delegate get_crontab_info   invokes HTTPService same
  - Delegate get_process_info   invokes HTTPService get_process_info

  # You can choose to have your Cairngorm Command classes use Cairngorm Delegate classes like this:
  - Event triggers Command: get_crontab_info   using Delegate get_crontab_info
  - Event triggers Command: get_process_info   using Delegate same

  # And/or, you can choose to have your Cairngorm Command classes directly invoke services like this:
  # The service name "same" means invoke the service with the same name as the Command.
  - Event triggers Command: get_amq_info          invokes HTTPService same
  - Event triggers Command: get_app_monitor_date  invokes HTTPService same
  - Event triggers Command: get_configuration     invokes HTTPService same
  - Event triggers Command: get_monitor_results   invokes HTTPService get_monitor_results

  # You can also define Cairngorm Command classes that use no HTTP Services like this:
  - Event triggers Command: service_error  
  - Event triggers Command: screen_capture 
  - Event triggers Command: filter_monitor_results 
  - Event triggers Command: display_monitor_results

  # The following Model:, ValueObject:, and :View entries will create ActionScript or MXML stub files
  # in the appropriate directories within your project.

  - Model: ActiveMQInfo
  - Model: Configuration
  - Model: CrontabInfo
  - Model: FilesList
  - Model: Images
  - Model: MonitorResults 
  - Model: ProcessInfo

  - ValueObject: ActiveMQQueueInfoVO
  - ValueObject: ConfigurationEntryVO
  - ValueObject: CrontabEntryVO 
  - ValueObject: MonitorResultVO
  - ValueObject: MonitorResultsFormVO
  - ValueObject: ProcessEntryVO 

  - View: BrowserTab         inherits from mx:VBox
  - View: ConfigurationTab   inherits from mx:VBox
  - View: MonitorResultsTab  inherits from mx:VBox
