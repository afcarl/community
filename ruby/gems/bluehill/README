= Bluehill = Flex/ActionScript code generator focusing on the Cairngorm framework.

The Flex Cairngorm framework, or "micro architecture", is the leading open-source
framework for creating Adobe Flex and AIR Rich Internet Applications (RIAs).

Cairngorm offers a nice implementation of the MVC design pattern.  This pattern, along
with Cairngorm event-driven and asynchronous idioms, are easily understood by a development
team and thus form the foundation of a well designed, consistent, and maintainable application.

One downside of Cairngorm, however, is the verbose nature of its code.  Several classes,
interfaces, and MXML files need to be touched or created for each new event-driven function.
These code files reside in not just one, but several, code directories (i.e. - packages)
within your application.  Developers often call this type of coding "tedious" or "gruntwork".

Therein lies the purpose of Bluehill - to eliminate the tedium of writing code for  
Cairngorm framework based Flex and AIR applications, and to enable the iterative and 
incremental development of these applications.  

Most "code generators" are "waterfall" in nature; once you generate the code with these 
tools, then you don't regenerate the code again since it will overlay your originally 
generated code files.  Bluehill is both "waterfall" and "incremental" in nature - see
the usage instructions below.

The name of the Cairngorm framework derives from the name of a mountain in the Scottish 
Highlands.  "Cairngorm" is Gaelic for "Blue Hill"; therefore the name of this project.

= General

Author::   Chris Joakim <cjoakim@bellsouth.net>. 
Requires:: Ruby 1.8.4 or later
License::  Copyright 2010 by Chris Joakim.
           GNU General Public License (GPL) license.
           See http://www.gnu.org/copyleft/gpl.html
        
== License

Bluehill is available under GNU General Public License (GPL) license.

== Download

Bluehill is packaged and installed as a ruby 'gem'.  Download file 'bluehill-0.9.0.gem'
from https://github.com/cjoakim/community/tree/master/ruby/gems/bluehill/

== Installation

1.  Ensure that you have the necessary prerequisites installed on your computer.
    These include ruby itself, the 'rubygems' package management system, the
    'date', 'erb', and 'time' standard ruby libraries, and ruby rake.

    See http://www.ruby-lang.org/en/ if you're not yet familiar with ruby.

2.  Download the bluehill-0.9.0.gem file from http://www.joakim-systems.com/bluehill

3.  Install the gem file with command:  

    sudo gem install bluehill

4.  Copy or move the gem file to where you intend to execute Bluehill from a command line.
    Then unpack the gem from that directory location with this command: 

    gem unpack bluehill-0.9.0.gem

== Usage

1.  Beneath the directory where you unpacked the gem in installation step 4, above,
    edit the config/bluehill.config file according to the needs of your application.

    The entries in this file are intended to be English-like and self-explanitory.

    Do a "change all" edit on the file from "YourApplication" to the actual name of
    your application that you want to generate with Bluehill.

    Also be sure to change the "Workspace directory is:" value to be the directory
    of your FlexBuilder workspace.

    The "English like" format of the bluehill.config file was inspired by the ruby
    "cucumber" testing tool.  The format is more readable than other formats such as
    yaml or properties.

2.  Bluehill is executed as ruby rake tasks; there are two.

		[/cjoakim/bluehill]$ rake -T
		rake bluehill:display_properties  # Display parsed properties.
		rake bluehill:generate            # Generate code and files.

    The first command is for informational and debugging purposes.

    The second command will cause Bluehill to generate code into your project,
    within your FlexBuilder workspace, and into the base package specified in
    the configuration file.

3.  Iterative & Incremental development.

    Each generated code file will contain a line with this literal within a comment:

    "Generated by Bluehill - OVERWRITE"

    To prevent Bluehill from overwriting the file upon subsequent generations,
    simply remove the word "OVERWRITE".  

    This allows you to generate new Cairngorm events, commands, delegates, etc.
    by adding/altering the bluehill.config file, yet also retain your modifications
    to previously generated code.

    Overwrites may be globally disabled by setting the "Overwrite files is:" value
    to 'false'.  If the value of "Create backup files is:" is 'true', then "*.bak" 
    files, containing the current contents, will be created for each regenerated and 
    overwritten file.

    You should typically let Bluehill regenerate these files - Services.mxml, the 
    FrontController class for your app, and the Events names class.

4.  Custom Code Templates

    You don't need to alter the code template ruby ERB files in the /templates directory.
    However, you may opt to either edit them or copy them.  Be sure that the bluehill.config
    file contains the name of your copied template(s).

== Online Resources

*  https://github.com/cjoakim/community/tree/master/ruby/gems/bluehill/

*  http://opensource.adobe.com/wiki/display/cairngorm/Cairngorm

*  http://cairngormdocs.org/

*  http://en.wikipedia.org/wiki/Cairn_Gorm  ( origin of the names )

== Road Map / TODO List

*  Enable other service types in addition to HTTPService.

*  Other features based on user feedback.

== Support

*  Please visit the Tracker page at http://rubyforge.org/projects/bluehill/ to submit 
   a request, a question, or to report a bug.

== Warranty

This software is provided "as is" and without any express or implied warranties, including, 
without limitation, the implied warranties of merchantibility and fitness for a particular purpose.
